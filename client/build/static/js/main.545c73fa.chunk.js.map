{"version":3,"sources":["components/Quiz/QuizAlts/QuizAlt/QuizAlt.module.css","components/Quiz/QuizQuestion/QuizQuestion.module.css","containers/Header/Header.module.css","components/ThemeSelector/ThemeSelector.module.css","components/ThemeSelector/SelectorItem/SelectorItem.module.css","components/Quiz/Quiz.module.css","containers/MusicQuiz/MusicQuiz.module.css","containers/Layout/Layout.module.css","App.module.css","components/Quiz/QuizAlts/QuizAlts.module.css","containers/Header/Header.js","actions/quizActions.js","actions/types.js","components/ThemeSelector/SelectorItem/SelectorItem.js","components/ThemeSelector/ThemeSelector.js","components/Quiz/QuizQuestion/QuizQuestion.js","components/Quiz/QuizAlts/QuizAlt/QuizAlt.js","components/Quiz/QuizAlts/QuizAlts.js","components/SpotifyPlayer/SpotifyPlayer.js","actions/playerActions.js","actions/authActions.js","components/Quiz/Quiz.js","containers/MusicQuiz/MusicQuiz.js","containers/LoginPage/LoginPage.js","containers/Layout/Layout.js","App.js","reducers/authReducer.js","reducers/songReducer.js","reducers/playerReducer.js","reducers/quizReducer.js","reducers/index.js","index.js"],"names":["module","exports","Header","className","classes","Component","sendAnswer","question_number","alt_number","dispatch","a","fetch","method","credentials","body","JSON","stringify","headers","response","json","correct_alt_number","type","payload","SelectorItem","props","name","id","quizId","onClick","click","htmlFor","src","quizImage","alt","quizDescription","ThemeSelector","this","getPossibleQuizzes","quizzes","map","quiz","image","description","key","selectQuiz","connect","state","selectedQuiz","possibleQuizzes","QuizQuestion","questionImg","QuestionText","questionText","QuizAlt","altClasses","correctAlternative","disabled","altNumber","borderThick","cardImgWrap","altImg","altTitle","QuizAlts","currentQuestion","question_alternatives","alternative","correctAnswer","alt_title","alt_img","selectedAnswer","SpotifyPlayer","player","waitForSpotify","Promise","resolve","window","Spotify","onSpotifyWebPlaybackSDKReady","createSpotifyPlayer","Player","getOAuthToken","cb","getToken","token","addListener","message","console","error","log","device_id","setDevice","song","songUrl","playSong","deviceId","playerReady","data","spotify_uri","Quiz","getQuestions","currentQuestionNumber","showScore","nextQuestion","shouldShowScore","question_img","question_title","question_track_url","changeQuestion","playlist_id","MusicQuiz","quizStarted","startQuiz","LoginPage","href","Layout","isLoggedIn","isAuthenticated","auth","logout","App","initialState","user","songInfo","quizIsSelected","questions","combineReducers","question","currentTrack","cQuestion","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.545c73fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizAlt\":\"QuizAlt_QuizAlt__1VCUh\",\"borderThick\":\"QuizAlt_borderThick__11BGM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizQuestion\":\"QuizQuestion_QuizQuestion__209Au\",\"QuestionText\":\"QuizQuestion_QuestionText__gULoD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1xrSh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ThemeSelector\":\"ThemeSelector_ThemeSelector__1MZF_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectorItem\":\"SelectorItem_SelectorItem__25t34\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__3Brri\",\"jumbotron\":\"Quiz_jumbotron__20eFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MusicQuiz\":\"MusicQuiz_MusicQuiz__1W54L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__37MHr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizAlts\":\"QuizAlts_QuizAlts__GTI6f\"};","import React, { Component } from 'react'\n\nimport classes from './Header.module.css'\n\nexport class Header extends Component {\n    render() {\n        return (\n            <div className={`row ${classes.Header}`}>\n                <div className=\"col\">Header</div>\n                <div className=\"col\">Logo</div>\n            </div>\n        )\n    }\n}\n\nexport default Header\n","import { QUIZ_SELECTED, FETCH_POSSIBLE_QUIZZES, QUIZ_STARTED, FETCH_QUESITONS, NEXT_QUESTION, FETCH_ANSWER, SHOW_SCORE } from './types'\n\n\nexport const selectQuiz = (selectedQuiz) => (dispatch) => {\n    \n    dispatch({ type: QUIZ_SELECTED, payload: selectedQuiz})\n}\n\n\nexport const nextQuestion = () => async (dispatch) => {\n    dispatch({ type: NEXT_QUESTION })\n}\n\nexport const showScore = () => async (dispatch) => {\n    dispatch({ type: SHOW_SCORE })\n}\n\nexport const sendAnswer = (question_number, alt_number) => async (dispatch) => {\n    const response = await fetch('http://localhost:5000/api/quiz/answer', {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify({question_number, alt_number}),\n        headers: {\n            'Content-Type':'application/json'\n        }\n    })\n\n    const correct_alt_number = await response.json()\n\n    dispatch({ type: FETCH_ANSWER, payload: {alt_number, correct_alt_number} })\n}\n\nexport const getPossibleQuizzes = () => async (dispatch) => {\n    let response = await fetch('http://localhost:5000/api/quiz/getQuizzes', {method: 'GET', credentials: 'include'})\n    response = await response.json()\n\n    dispatch({ type: FETCH_POSSIBLE_QUIZZES, payload: response })\n}\n\nexport const startQuiz = () => (dispatch) => {\n    dispatch({ type: QUIZ_STARTED})\n}\n\nexport const getQuestions = (id) => async (dispatch) => {\n    let response = await fetch('http://localhost:5000/api/quiz/createQuiz', {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify({playlist_id: id}),\n        headers: {\n            'Content-Type':'application/json'\n        }\n    })\n    response = await response.json()\n    dispatch({ type: FETCH_QUESITONS, payload: response })\n\n    return response\n}\n","export const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const IS_LOGGED_IN = 'IS_LOGGED_IN'\nexport const FETCH_SONG = 'FETCH_SONG'\nexport const PLAYER_READY = 'PLAYER_READY'\nexport const QUIZ_SELECTED = 'QUIZ_SELECTED'\nexport const FETCH_POSSIBLE_QUIZZES = 'FETCH_POSSIBLE_QUIZZES'\nexport const QUIZ_STARTED = 'QUIZ_STARTED'\nexport const FETCH_QUESITONS = 'FETCH_QUESITONS'\nexport const NEXT_QUESTION = 'NEXT_QUESTION'\nexport const FETCH_ANSWER = 'FETCH_ANSWER'\nexport const SHOW_SCORE = 'SHOW_SCORE'\n\n","import React from 'react'\nimport classes from './SelectorItem.module.css'\n\nconst SelectorItem = (props) => {\n    return (\n        <div className={`${classes.SelectorItem}`}>\n            <input type=\"radio\" name=\"quiz\" id={props.quizId} onClick={() => props.click(props.quizId)}/>\n            \n            <label htmlFor={props.quizId}>\n            <div className=\"card text-white bg-dark\">\n                <img src={props.quizImage} className=\"card-img\" alt=\"Quiz img\"/>\n                {/* <div className=\"card-img-overlay\">\n                    <p className=\"card-text text-monospace\">{props.quizDescription}</p>\n                </div> */}\n            </div>\n            <h5 className=\"text-center text-white\">{props.quizDescription}</h5>\n            </label>\n            <input type=\"hidden\" name={props.quizId}/>\n        </div>\n    )\n}\n\n\nexport default SelectorItem\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { selectQuiz, getPossibleQuizzes } from '../../actions/quizActions'\nimport classes from './ThemeSelector.module.css'\n\nimport SelectorItem from './SelectorItem/SelectorItem'\nclass ThemeSelector extends Component {\n    componentDidMount() {\n        this.props.getPossibleQuizzes()\n    }\n\n    render() {\n        if (!this.props.quizzes) {\n            return <div>asd</div>\n        }\n        return (\n            <div className={`row justify-content-md-center ${classes.ThemeSelector}`}>\n            <div className=\"card-group\">\n                {this.props.quizzes.map(quiz => \n                (<SelectorItem \n                quizId={quiz.id} \n                quizImage={quiz.image}\n                quizDescription={quiz.description}\n                key={quiz.id}\n                click={(id) => this.props.selectQuiz(id)}\n                />\n                ))}\n            </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    selectedQuiz: state.quiz.selectedQuiz,\n    quizzes: state.quiz.possibleQuizzes\n})\n\n\n\nexport default connect(mapStateToProps, { selectQuiz, getPossibleQuizzes})(ThemeSelector)\n","import React from 'react'\n\nimport classes from './QuizQuestion.module.css'\n\nexport const QuizQuestion = (props) => {\n    return (\n        <div className=\"row justify-content-center\">\n            <div className={`col ${classes.QuizQuestion}`}>\n                <div className=\"card text-white bg-dark\">\n                    <img src={props.questionImg} className=\"card-img\" alt=\"Quiz img\"/>\n                </div>\n            </div>\n            <div className=\"w-100\"></div>\n            <div className=\"col\"><h5 className={`text-center ${classes.QuestionText}`}>{props.questionText}</h5></div>\n        </div>\n    )\n}\n\nexport default QuizQuestion\n","import React from 'react'\n\nimport classes from './QuizAlt.module.css'\n\nexport const QuizAlt = (props) => {\n    let altClasses\n    \n    if (props.correctAlternative !== null) {\n        altClasses = props.correctAlternative ? 'border-success' : 'border-danger'\n    }\n   \n    return (\n        <div className={`col-3 ${classes.QuizAlt}`}>\n            <input disabled={props.correctAlternative !== null} type=\"radio\" name=\"alt\" id={props.altNumber} onClick={() => props.click(props.altNumber)}/>\n            <label htmlFor={props.altNumber}>\n            <div className={`card bg-transparent ${altClasses} ${classes.borderThick}`}>\n                <div className={classes.cardImgWrap}><img src={props.altImg} className=\"card-img\" alt=\"Quiz img\"/></div>\n            </div>\n            <h5 className=\"text-center text-white\">{props.altTitle}</h5>\n            </label>\n            <input type=\"hidden\" name={props.altNumber}/>\n        </div>\n    )\n}\n\nexport default QuizAlt\n\n\n\n ","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nimport { sendAnswer } from '../../../actions/quizActions'\n\nimport QuizAlt from './QuizAlt/QuizAlt'\n\nimport classes from './QuizAlts.module.css'\n\nexport class QuizAlts extends Component {\n\n    render() {\n    if(this.props.currentQuestion) {\n        return (\n            <div className={`row row-cols-2 justify-content-md-center`}>\n                {this.props.currentQuestion.question_alternatives.map(alternative => {\n                    let correctAnswer = null\n                    if (this.props.correctAnswer !== null) {\n                        correctAnswer = alternative.alt_number === this.props.correctAnswer\n                    }\n                    return (\n                        <QuizAlt \n                        altTitle={alternative.alt_title} \n                        altImg={alternative.alt_img}\n                        click={(alt_number) => this.props.sendAnswer(this.props.currentQuestion.question_number, alt_number)}\n                        altNumber={alternative.alt_number}\n                        correctAlternative={correctAnswer}\n                        key={alternative.alt_img}\n                        />\n                    )     \n                })}\n            </div>\n        )\n    }\n\n    return (\n        <div className='row justify-content-md-center'>\n               <p>Loading</p>\n        </div>\n    )\n}\n\n}\n\nconst mapStateToProps = (state) => ({\n    currentQuestion: state.quiz.currentQuestion,\n    correctAnswer: state.quiz.correctAnswer,\n    selectedAnswer: state.quiz.selectedAnswer\n})\n\nexport default connect(mapStateToProps, {\n    sendAnswer\n})(QuizAlts)\n","import React, { Component } from 'react'\nimport { setDevice, playSong } from '../../actions/playerActions'\nimport { getToken } from '../../actions/authActions' \nimport { connect } from 'react-redux'\n\nexport class SpotifyPlayer extends Component {\n  player = null\n    \nwaitForSpotify = async () => {\n    return new Promise(resolve => {\n      window.Spotify ? resolve (window.Spotify)\n                      : window.onSpotifyWebPlaybackSDKReady = () => {\n                        resolve(window.Spotify)\n                      }\n    })\n  }\n\n  createSpotifyPlayer = async () => {\n    \n    const { Player } = await this.waitForSpotify()\n    \n    this.player = new Player({\n      name: 'Web Playback SDK Quick Start Player',\n      getOAuthToken: async cb => {\n        const token = await this.props.getToken()\n         cb(token) \n        }\n    })\n\n    // Error handling\n    this.player.addListener('initialization_error', ({ message }) => { console.error(message) })\n    this.player.addListener('authentication_error', ({ message }) => { console.error(message) })\n    this.player.addListener('account_error', ({ message }) => { console.error(message) })\n    this.player.addListener('playback_error', ({ message }) => { console.error(message) })\n\n    // Playback status updates\n    this.player.addListener('player_state_changed', state => { console.log(state) })\n\n    // Ready\n    this.player.addListener('ready', ({ device_id }) => {\n      console.log('Ready with Device ID', device_id)\n      this.props.setDevice(device_id)\n  })\n\n    // Not Ready\n    this.player.addListener('not_ready', ({ device_id }) => {\n      console.log('Device ID has gone offline', device_id)\n    })\n\n    // Connect to the player!\n    this.player.connect();\n  }\n\n\n  componentDidMount() {\n      this.createSpotifyPlayer()\n  }\n\n  \n  render() {\n    if(this.props.song) {\n      console.log('HÄR' + this.props.song)\n      return (\n\n          <div songUrl={this.props.playSong(this.props.song, this.props.deviceId)}>        \n          </div>\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  playerReady: state.player.playerReady,\n  deviceId: state.player.deviceId\n})\n\n\n\nexport default connect(mapStateToProps, { setDevice, getToken, playSong })(SpotifyPlayer)\n","import { PLAYER_READY } from './types'\n\n\nexport const setDevice = (id) => async (dispatch) => {\n    dispatch({ type: PLAYER_READY, payload: id })\n}\n\n\nexport const stopSong = (device_id) => async (dispatch) => {\n    let response = await fetch('http://localhost:5000/api/player/pause', {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify({ device_id }),\n        headers: {\n            'Content-Type':'application/json'\n        }\n    })\n    response = await response.json()\n    console.log(await response)\n}\n\nexport const playSong = (spotify_uri, device_id) => async (dispatch) => {\n    let response = await fetch('http://localhost:5000/api/player/play', {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify({ spotify_uri, device_id }),\n        headers: {\n            'Content-Type':'application/json'\n        }\n    })\n    response = await response.json()\n    console.log(await response)\n\n    return response\n}\n\n\n\n\n\n","import { IS_LOGGED_IN, LOGOUT_SUCCESS, USER_TOKEN } from './types'\n\n\nexport const isLoggedIn = () => async (dispatch) => {\n    let response = await fetch('http://localhost:5000/api/auth/isLoggedIn', {method: 'GET', credentials: 'include'})\n    response = await response.json()\n    dispatch({ type: IS_LOGGED_IN, payload: response.data})\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await fetch('http://localhost:5000/api/auth/logout', {method: 'POST', credentials: 'include'})\n    response = await response.json()\n    dispatch({ type: LOGOUT_SUCCESS, payload: response.data})\n}\n\nexport const getToken = () => async (dispatch) => {\n    let response = await fetch('http://localhost:5000/api/auth/getToken', {method: 'GET', credentials: 'include'})\n    response = await response.json()\n    return response.data\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { getQuestions, nextQuestion, sendAnswer, showScore } from '../../actions/quizActions'\n\nimport classes from './Quiz.module.css'\n\nimport QuizQuestion from './QuizQuestion/QuizQuestion'\nimport QuizAlts from './QuizAlts/QuizAlts'\nimport SpotifyPlayer from '../SpotifyPlayer/SpotifyPlayer'\n\nexport class Quiz extends Component {\n    async componentDidMount() {\n        await this.props.getQuestions(this.props.selectedQuiz)\n        \n    }\n\n   \n\n    changeQuestion () {\n        if (this.props.currentQuestionNumber === 7) {\n            this.props.showScore()\n        } else {\n            this.props.nextQuestion()\n        }\n    }\n\n    render() {\n        const { currentQuestion} = this.props\n        if(currentQuestion) {\n            return (\n                <div className={`jumbotron ${classes.Quiz}`}>\n                    {this.props.shouldShowScore \n                    ? <p>SCORE</p>\n                    :<div>\n                    <QuizQuestion \n                    questionImg={currentQuestion.question_img}\n                    questionText={currentQuestion.question_title}\n                    />\n                    <p>{this.props.currentQuestionNumber}</p>\n                    <QuizAlts/>\n                    <SpotifyPlayer song={currentQuestion.question_track_url}/>\n                    {this.props.selectedAnswer ? <button onClick={() => this.changeQuestion() }>Next Question</button>:null}\n                    </div>\n                    } \n                </div>\n            )\n        }\n\n        return (\n            <div className=\"ui two column centered grid\">\n               <p>Loading</p> \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    currentQuestionNumber: state.quiz.currentQuestionNumber,\n    currentQuestion: state.quiz.currentQuestion,\n    selectedQuiz: state.quiz.selectedQuiz,\n    playerReady: state.player.playerReady,\n    selectedAnswer: state.quiz.selectedAnswer,\n    shouldShowScore: state.quiz.shouldShowScore\n})\n\nexport default connect(mapStateToProps, {\n    getQuestions,\n    nextQuestion,\n    sendAnswer,\n    showScore\n})(Quiz)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { startQuiz } from '../../actions/quizActions'\n\nimport ThemeSelector from '../../components/ThemeSelector/ThemeSelector'\nimport Quiz from '../../components/Quiz/Quiz'\nimport classes from './MusicQuiz.module.css'\n\nclass MusicQuiz extends Component {\n    render() {\n        return (\n            <div className={`col ${classes.MusicQuiz}`}>\n                {this.props.quizStarted \n                    ? <Quiz/>\n                    :\n                    <div>\n                        <ThemeSelector />\n                        { this.props.selectedQuiz ?\n                        <div className=\"row justify-content-md-center\">\n                            <div className=\"column\">\n                                <button onClick={() => this.props.startQuiz() }>Start</button>\n                            </div>\n                        </div>: null}\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    selectedQuiz: state.quiz.selectedQuiz,\n    quizStarted: state.quiz.quizStarted\n})\n\nexport default connect(mapStateToProps, { startQuiz })(MusicQuiz)\n","import React, { Component } from 'react'\n\nclass LoginPage extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4\">\n                        <p className=\"text-center\"><a href='http://localhost:5000/api/auth/login'>Login with Spotify</a></p>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4\">\n                        <p className=\"text-center\">TODO Insert app Description... :)</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginPage\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { isLoggedIn, logout } from '../../actions/authActions'\n\nimport Header from '../Header/Header'\nimport MusicQuiz from '../MusicQuiz/MusicQuiz'\nimport LoginPage from '../LoginPage/LoginPage'\nimport classes from './Layout.module.css'\n\n\nexport class Layout extends Component {\n    componentDidMount() {\n        this.props.isLoggedIn()\n    }\n\n    render() {\n        return (\n            <div className={classes.Layout}>\n                <Header />\n            <div className='container'>\n                <main>\n                    {\n                    this.props.isAuthenticated ? <MusicQuiz /> : <LoginPage />\n                    }\n                </main>\n            </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\n\nexport default connect(mapStateToProps, { isLoggedIn, logout})(Layout);\n","import React, {Component} from 'react';\n\nimport Layout from './containers/Layout/Layout'\n\nimport classes from './App.module.css'\n\n\n\nclass App extends Component {\n  render () {\n    return (\n      <div className={classes.App}>\n      <Layout />\n      </div>\n    )\n  }\n}\n\n\n\n\n\nexport default App;\n","import { IS_LOGGED_IN, LOGOUT_SUCCESS} from '../actions/types'\n\nconst initialState = {\n    isAuthenticated: null,\n    user: null\n}\n\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case IS_LOGGED_IN:\n        return { ...state, isAuthenticated: payload }\n\n    case LOGOUT_SUCCESS:\n        return { ...state, isAuthenticated: false }\n\n    default:\n        return state\n    }\n}\n","import { FETCH_SONG} from '../actions/types'\n\nconst initialState = {\n    songInfo: null\n}\n\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case FETCH_SONG:\n        return { ...state, songInfo: payload }\n\n    default:\n        return state\n    }\n}\n","import { PLAYER_READY } from '../actions/types'\n\nconst initialState = {\n    playerReady: null,\n    deviceId: null\n}\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case PLAYER_READY:\n        return { ...state, playerReady: true, deviceId: payload }    \n    default:\n        return state\n    }\n}\n","import { QUIZ_SELECTED, FETCH_POSSIBLE_QUIZZES, QUIZ_STARTED, FETCH_QUESITONS, NEXT_QUESTION, FETCH_ANSWER, SHOW_SCORE} from '../actions/types'\n\nconst initialState = {\n    quizIsSelected: null,\n    selectedQuiz: null,\n    possibleQuizzes: null,\n    quizStarted: null,\n    questions: null,\n    currentQuestionNumber: null,\n    currentQuestion: null,\n    selectedAnswer: null,\n    correctAnswer: null,\n    shouldShowScore: null\n}\n\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case QUIZ_SELECTED:\n        return { ...state, quizIsSelected: true, selectedQuiz: payload }\n    case FETCH_POSSIBLE_QUIZZES:\n        return { ...state,  possibleQuizzes: payload}\n    case QUIZ_STARTED:\n        return { ...state, quizStarted: true, }\n    case SHOW_SCORE:\n        return { ...state, shouldShowScore: true}\n    case FETCH_QUESITONS:\n        const question = {...payload[0]}\n        return { \n            ...state,\n            questions: payload, \n            currentQuestionNumber: 0,\n            currentQuestion: question,\n            currentTrack: question.question_track_url\n        }\n    case NEXT_QUESTION:\n        const cQuestion = {...state.questions[state.currentQuestionNumber + 1]}\n        return {\n            ...state,\n            currentQuestionNumber: state.currentQuestionNumber + 1,\n            currentQuestion: cQuestion,\n            currentTrack: cQuestion.question_track_url,\n            selectedAnswer: null,\n            correctAnswer: null\n        }\n    case FETCH_ANSWER:\n        return {\n            ...state,\n            selectedAnswer: payload.alt_number,\n            correctAnswer: payload.correct_alt_number\n        }\n    default:\n        return state\n    }\n}\n","import { combineReducers } from 'redux'\n\nimport authReducer from './authReducer'\nimport songReducer from './songReducer'\nimport playerReducer from './playerReducer'\nimport quizReducer from './quizReducer'\n\nexport default combineReducers({\n    auth: authReducer,\n    song: songReducer,\n    player: playerReducer,\n    quiz: quizReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\n\n\nimport App from './App';\nimport reducers from './reducers'\n\nconst store = createStore(reducers, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}